//Force compiler options
#option TRUNCATE_DIVISION_BY_LITERAL_BUG off
#option BOOL_TRUE_RETURN_DECIMAL off

#include "std.zh"
#include "Classic.zh"

//Customized Headers
#include "Gollabyrinth/Headers/DrawLayerFix.zh"

//Utilities
#include "Gollabyrinth/Scripts/GL_Gen_Scripts.zs"
#include "Gollabyrinth/Scripts/GL_Gen_Functions.zs"
#include "Gollabyrinth/Scripts/GL_Gen_TestingScripts.zs"

//Global scale stuff
#include "Gollabyrinth/Scripts/GL_Global_Subscreen.zs"
#include "Gollabyrinth/Scripts/GL_Global_ItemButtons.zs"
#include "Gollabyrinth/Scripts/GL_Global_MPRegen.zs"
#include "Gollabyrinth/Scripts/GL_Global_SkillTree.zs"
#include "Gollabyrinth/Scripts/GL_Global_Characters.zs"

//Spells
#include "Gollabyrinth/Scripts/GL_Spell_Purge.zs"
#include "Gollabyrinth/Scripts/GL_Spell_Flametongue.zs"
#include "Gollabyrinth/Scripts/GL_Spell_WindDagger.zs"
#include "Gollabyrinth/Scripts/GL_Spell_SpectralBarrier.zs"
#include "Gollabyrinth/Scripts/GL_Spell_Drones.zs"
#include "Gollabyrinth/Scripts/GL_Spell_Blizzard.zs"
#include "Gollabyrinth/Scripts/GL_Spell_Snare.zs"
#include "Gollabyrinth/Scripts/GL_Spell_Nova.zs"

//FFCs
#include "Gollabyrinth/Scripts/GL_FFCSteal.zs"

untyped G[100000]; //Untyped so any pointer can be passed into the array.

//Config typedefs
typedef const int DEFINE;		//Do not change DEFINE constants unless you know what you're doing.
typedef const int CONFIG; 		//Integer configs
typedef const float CONFIGF;	//Float configs
typedef const bool CONFIGB;		//Boolean configs


CONFIGF BASESTAT_ATTACK = 1.0;	//Your base Attack stat. This refers to the amount of damage you do with your basic primary
CONFIGF BASESTAT_DEFENSE = 1.0;	//Your base Defense stat. This does not correlate 1:1 to what is shown in the editor, as higher numbers indicate more defense and lower values less defense as opposed to what it would be on the 
CONFIGF BASESTAT_SPEED = 1.5;	//The base step speed.
CONFIGF BASESTAT_MAGIC = 1.0; 	//The base magic regen stat.

enum		//Enums are actually fantastic for global arrays.
{
G_BUTTON_A,				//Int: Item assigned to the A button
G_BUTTON_B,				//Int: Item assigned to the B button
G_BLANK,				//Int: This should stay as nothing?
G_BUTTON_L,				//Int: Item assigned to the L button
G_BUTTON_R,				//Int: Item assigned to the R button
G_ACTIVE_POSX,			//Int: The X position of the cursor on the subscreen. Note that these two refer to Slots instead of raw X/Y axis
G_ACTIVE_POSY,			//Int: The Y position of the cursor
G_ANIM,					//Int: Current anim counter
G_MPREGEN,				//Float: Current Magic regen level.
G_MPCOOLDOWN,			//Int: Magic regen cooldown
G_HEROSCALE,			//Int: The scale the player is at
G_CHARID,
G_ATTACK,
G_DEFENSE,
G_SPEED,
G_MAGIC,
G_MENUARRAY = 1024,		//Int: Beginning of the menu array vars
G_MENUARRAYEND = 2048,	//Int: End of the menu array vars
G_END};

enum Color	//Just a handy way of tracking commonly used colors
{
C_TRANS = 0x00,
C_GRAY =  0x0D,
C_GREY =  C_GRAY, //Extra constant because there are two different spellings of "Grey"
C_WHITE = 0x0E,
C_BLACK = 0x0F,
C_HOLY =  0xD1,
C_GREEN1 =  0x7A,
C_GREEN2 =  0x7B,
C_GREEN3 =  0x7C
};

//New counter definitions
CONFIG CR_COINS = CR_CUSTOM1;	//Coin counter

//New item definitions
CONFIG I_RINGPALETTE = 158;		//The Ring Palette item. This ring item is modified to change your Defense, your base player tiles and your palette.
CONFIG I_RINGPALETTE0 = 159;	//A second Ring Palette item, lower level than the previous one. This item silently gets added or removed from their inventory whenever the player's palette would change. This exists solely to get around the ZC bug where the player's palette does not update when you modify the sprite palette of the currently active ring. This item and any code that runs with it will be removed after this bug is fixed.
CONFIG I_COIN = 160;			//The basic Coin item.

CONFIG SFX_RUMBLE = 76; //Rumble SFX used for Quake, Thunder, Meteor, etc. in Yuurand.

//LWeapon Scripts. These are hardcoded script IDs because of the way the subscreen is set up. This is subject to change in due time.
DEFINE ITMS_PURGE = 1; //Purge
DEFINE ITMS_FLAMETONGUE = 2; //Fire whip
DEFINE ITMS_WINDDAGGER = 3; //Wind daggers
DEFINE ITMS_SPECTRALBARRIER = 4; //Spectral Barrier
DEFINE ITMS_SENTRIES = 5; //Sentries
DEFINE ITMS_BLIZZARD = 6; //Blizzard
DEFINE ITMS_SNARE = 7; //Snare
DEFINE ITMS_NOVA = 8; //Nova


//Hero->Misc[] definitions

//Initiates global variables. Runs only when you load up the game for the first time.
global script Init
{
	void run()
	{
		//Set base stats
		G[G_ATTACK] = BASESTAT_ATTACK;
		G[G_DEFENSE] = BASESTAT_DEFENSE;
		G[G_SPEED] = BASESTAT_SPEED;
		G[G_MAGIC] = BASESTAT_MAGIC;
		Character::AssignCharPointers();
	}
}

global script Global 
{
	void run()
	{
		//Initialize Character arrays.
		Character::LuanjaInit();
		Character::HelenaInit();
		Hero->MP = Hero->MaxMP;
		Character::ChangeCharacter(Character::CHAR_LUANJA);
		//Game->DisableActiveSubscreen = true;
		while(true)
		{
			++G[G_ANIM];
			G[G_ANIM]%=5040;
			MagicRegen();
			ABLR_Handle();
			Waitdraw();
			MPCooldownTimer();
			Waitframe();
		}
	}
}

hero script Main
{
	void run()
	{
		while(true)
		{
			Waitdraw();
			Waitframe();
		}
	}
}
